import pandas as pd
import numpy as np
from math import log

# 读取 Excel 文件
df = pd.read_excel('综合媒体_全词组_清洗.xlsx')

# 查看原始列名和列数
print("原始列名:", df.columns)
print("列数:", len(df.columns))

# 调整列名（假设有 10 列）
df.columns = ['标题', '日期', '媒体', '类型', '权重', '当日总权重', '当日媒体权重', 'sentiment', 'wsi', '额外列']

# 按日期分组
grouped = df.groupby('日期')

# 结果存储
results = []

# 遍历每日数据
for date, group in grouped:
    # 获取当日的 sentiment 和 wsi 值以及权重
    sentiment_values = group['sentiment'].values
    wsi_values = group['wsi'].values
    weights = group['当日媒体权重'].values

    # 计算 sentiment 的指标
    sentiment_entropy = 0
    sentiment_weighted_mean = np.average(sentiment_values, weights=weights)
    sentiment_variance = np.average((sentiment_values - sentiment_weighted_mean) ** 2, weights=weights)
    sentiment_std_dev = np.sqrt(sentiment_variance)

    sorted_sentiment_indices = np.argsort(sentiment_values)
    sorted_sentiment = sentiment_values[sorted_sentiment_indices]
    sorted_sentiment_weights = weights[sorted_sentiment_indices]

    cum_sentiment_weights = np.cumsum(sorted_sentiment_weights) / np.sum(sorted_sentiment_weights)
    cum_sentiment_values_weights = np.cumsum(sorted_sentiment * sorted_sentiment_weights) / np.sum(sorted_sentiment * sorted_sentiment_weights)
    sentiment_gini = 1 - np.sum((cum_sentiment_weights[:-1] + cum_sentiment_weights[1:]) * (cum_sentiment_values_weights[1:] - cum_sentiment_values_weights[:-1]))

    # 计算 wsi 的指标
    wsi_entropy = 0
    wsi_weighted_mean = np.average(wsi_values, weights=weights)
    wsi_variance = np.average((wsi_values - wsi_weighted_mean) ** 2, weights=weights)
    wsi_std_dev = np.sqrt(wsi_variance)

    sorted_wsi_indices = np.argsort(wsi_values)
    sorted_wsi = wsi_values[sorted_wsi_indices]
    sorted_wsi_weights = weights[sorted_wsi_indices]

    cum_wsi_weights = np.cumsum(sorted_wsi_weights) / np.sum(sorted_wsi_weights)
    cum_wsi_values_weights = np.cumsum(sorted_wsi * sorted_wsi_weights) / np.sum(sorted_wsi * sorted_wsi_weights)
    wsi_gini = 1 - np.sum((cum_wsi_weights[:-1] + cum_wsi_weights[1:]) * (cum_wsi_values_weights[1:] - cum_wsi_values_weights[:-1]))

    # 存储结果
    results.append({
        '日期': date,
        'sentiment_熵': sentiment_entropy,
        'sentiment_反差': sentiment_std_dev,
        'sentiment_基尼系数': sentiment_gini,
        'wsi_熵': wsi_entropy,
        'wsi_反差': wsi_std_dev,
        'wsi_基尼系数': wsi_gini
    })

# 结果输出
results_df = pd.DataFrame(results)
print(results_df)

# 保存结果到 Excel 文件
results_df.to_excel('每日指标计算结果.xlsx', index=False)
